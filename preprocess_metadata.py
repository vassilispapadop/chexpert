# -*- coding: utf-8 -*-
"""preprocess_metadata.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1OslrBVhRaIuemXF1iVsAAvJ4jnDaxQ_P
"""

import pandas as pd

path = '/Users/vpapadop/Documents/GitHub/deep-learning/dataset/CheXpert-v1.0-small/'

df = pd.read_csv(path + 'train.csv')
df = df.fillna(0)

print(df.shape)
df.tail()

#drop rows with invalid age
df = df[df['Age'] >0]
#drop row with x-ray view PA
df = df[df['AP/PA'] == 'AP']
#drop sex,age,fronta/lateral,ap/pa colums
df = df.drop(['Sex', 'Age', 'Frontal/Lateral', 'AP/PA'], axis=1)
print(df.shape)

df.head()

# treat uncertainty, -1 indicates uncertainty will treat it as positive class
types = {       'Path': str,
                'No Finding': int,
                'Enlarged Cardiomediastinum': int,
                'Cardiomegaly': int,
                'Lung Opacity': int,
                'Lung Lesion': int,
                'Edema': int,
                'Consolidation': int,
                'Pneumonia': int,
                'Atelectasis': int,
                'Pneumothorax': int,
                'Pleural Effusion': int,
                'Pleural Other': int,
                'Fracture': int,
                'Support Devices': int
               }

df = df.astype(types)
df.dtypes

# uncertainty treated as positive class 50% and negative class as 50%
# import random
# for col in df.columns:
#   if col != 'Path': 
#     df.loc[(df[col] == -1)] = random.randint(0, 1)

df.iloc[:,1:].sum().plot.barh()

df = df.sample(frac=0.2, replace=False, random_state=1)
print(df.shape)
df.head()

df.iloc[:,1:].sum().plot.barh()

df.reset_index
df.head()

# df = df[:10]
#fix absolute path in df
df['Path'] = df['Path'].str.replace('CheXpert-v1.0-small/train/', path+'train/')

for p in df['Path']:
  print(p)

from zipfile import ZipFile
# create a ZipFile object
zipObj = ZipFile(path + 'CheXpert-v1.0-processed.zip', 'w')
# Add multiple files to the zip
for p in df['Path']:
  zipObj.write(p)

# close the Zip File
zipObj.close()


df.to_csv(path + 'train_processed.csv', index=False)
